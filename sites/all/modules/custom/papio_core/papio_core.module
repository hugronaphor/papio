<?php

/**
 * @file
 * Main Papio Core file.
 */

/**
 * Implements hook_menu().
 */
function papio_core_menu() {
  $items['admin/config/general_papio_settings'] = array(
    'title' => 'Global Papio Settings',
    'type' => MENU_LOCAL_TASK,
    'description' => "Configure your sitewide Papio settings.",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('papio_core_admin_form'),
    'access arguments' => array('administer site'),
    'file' => 'papio_core.admin.inc',
    'weight' => 5,
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function papio_core_block_info() {
  $blocks = array();

  $blocks['papio_footer'] = array(
    'info' => t('Papio footer block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['papio_bottom_header'] = array(
    'info' => t('Papio bottom header block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function papio_core_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'papio_footer':

      $vars = array();
      $footer_vars = array(
        'footer_line_1',
        'footer_phone',
        'footer_line_2',
        'footer_facebook_site_url',
        'footer_twitter_site_url',
        'footer_youtube_site_url',
        'footer_credits',
      );

      foreach ($footer_vars as $var_name) {
        if ($var = variable_get($var_name)) {
          $vars[$var_name] = $var;
        }
      }

      $block['content'] = theme('papio_footer', $vars);
      break;

    case 'papio_bottom_header':
      $vars = _papio_core_get_social_data();
      $vars['bows_count'] = _papio_core_count_bows();
      $vars['count_block_title'] = variable_get('count_block_title');
      $block['content'] = theme('papio_bottom_header', $vars);
      break;
  }

  return $block;
}

/**
 * Helper funtion.
 * 
 * Detect the total number of bows.
 * @todo: Cache. Join Article type and check for bows:?
 */
function _papio_core_count_bows() {

  $query = db_select('node', 'n')
    ->fields('n')
    ->condition('type', 'article')
    ->condition('status', 1);
  $bows_count = $query->execute()->rowCount();

  if ($bows_count) {
    // Add additional zeros in order to have at least 4 digits number.
    $bows_count_array = str_split($bows_count);
    $bows_count_array_count = count($bows_count_array);

    if ($bows_count_array_count < 4) {
      for ($i = 1; $i <= 4 - $bows_count_array_count; $i++) {
        $additional_zero[] = 0;
      }
    }

    if (isset($additional_zero)) {
      $bows_count_array = array_merge($additional_zero, $bows_count_array);
    }
  }

  return $bows_count_array;
}

/**
 * Helper function to retrieve the social buttons data.
 *
 * @todo Re-thing the logic. Be beautiful.
 */
function _papio_core_get_social_data() {
  static $vars = array();
  if (!empty($vars)) {
    return $vars;
  }
  $footer_vars = array(
    'footer_facebook_site_url',
    'footer_twitter_site_url',
    'footer_youtube_site_url',
  );

  foreach ($footer_vars as $var_name) {
    if ($var = variable_get($var_name)) {
      $vars[$var_name] = $var;
    }
  }

  return $vars;
}

/**
 * Implements hook_theme().
 */
function papio_core_theme($existing, $type, $theme, $path) {
  return array(
    'papio_footer' => array(
      'template' => 'papio-footer',
      'arguments' => array('vars' => NULL),
      'path' => $path . '/theme',
    ),
    'papio_bottom_header' => array(
      'template' => 'papio-bottom-header',
      'arguments' => array('vars' => NULL),
      'path' => $path . '/theme',
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function papio_core_node_view($node, $view_mode) {

  switch ($view_mode) {
    case 'teaser':
      if (!empty($node->content['field_new'][0]['#markup'])) {
        $node->content['field_new'][0]['#markup'] = t('New!');
      }
      else {
        // Avoid empty field.
        unset($node->content['field_new']);
      }
      
      
      //dsm($node);
      
      //if (in_array($node->nid, array(353, 380))) {
        
        
        $rand = rand(1, 2000);
        
        if ($rand % 2 == 0) {
          $node->content['field_image'][0]['#image_style'] = 'main_list_2';
        }
        elseif ($rand % 3 == 0) {
          $node->content['field_image'][0]['#image_style'] = 'main_list_3';
        }
        
        //dsm(round(fibonacci($node->nid)));
      //}
      
      break;
  }
}

function fibonacci($n) {

//0, 1, 1, 2, 3, 5, 8, 13, 21

/*this is an error condition
   returning -1 is arbitrary - we could
   return anything we want for this
   error condition:
*/
if($n <0)
return -1;

if ($n == 0)
return 0;

if($n == 1 || $n == 2)
return 1;

$int1 = 1;
$int2 = 1;

$fib = 0;

//start from n==3
for($i=1; $i<=$n-2; $i++ )
{
$fib = $int1 + $int2;
//swap the values out:
$int2 = $int1;
$int1 = $fib;
}

return $fib;

}

function papio_core_preprocess_html(&$vars) {

  drupal_add_js(drupal_get_path('theme', 'papio') . '/js/jquery.wookmark.js');
  
  
  $bing_tag = array(
    '#tag' => 'meta', // The #tag is the html tag - <link />
    '#attributes' => array(
      'name' => 'msvalidate.01',
      'content' => 'put your bing_search_index code here.',
    ),
  );

  drupal_add_html_head($bing_tag, 'bing_search_index');
}

function papio_core_preprocess_page(&$variables) {

  // Add header variables for usage in page.tpl.php file.
  if ($header_line_1 = variable_get('header_line_1')) {
    $variables['header_line_1'] = $header_line_1;
  }
  if ($header_line_2 = variable_get('header_line_2')) {
    $variables['header_line_2'] = $header_line_2;
  }
}

//function papio_core_form_alter(&$form, &$form_state, $form_id);

function papio_core_preprocess_views_view(&$vars) {
  $view = &$vars['view'];
  if($view->name == 'main_list' && $view->current_display == 'main_list') {
    
      //dsm($view);
  }
  
  


}
